function [w,textPos] = initPsychToolboxWindows_noCLUT(w,bgInd,varargin)%% function [w,lrect,rrect,textPos] =% initPsychToolboxWindows_noCLUT(w,bgInd,[dsize],[cm],[cmIND])%Screen('Preference', 'SkipSyncTests', 1);[dsize,cm,cmIND] = parse_varargin(varargin{:});% open main window & get needed constants	if isempty(w)        screenSel = Screen('screens');        if length(screenSel)>1            screenToUse = screenSel(2);        else            screenToUse = 0;        end        [w.w,w.rect]=Screen('OpenWindow',screenToUse, cm(bgInd,:),[],32,2);        HideCursor;        ListenChar(2);    end	% prepare target screen	Screen(w.w,'TextSize',28);	Screen(w.w,'TextStyle',0);	Screen(w.w,'TextFont','Arial');        lrect = []; rrect = []; textPos = [];    %%%    if dsize        xmax=w.rect(3); ymax=w.rect(4);        [lctr,rctr]=IMG_POS(xmax,ymax);        % get positions of l and r images        lrect=[lctr-floor(dsize/2) lctr+floor(dsize/2)];        rrect=[rctr-floor(dsize/2) rctr+floor(dsize/2)];        % get positions of text        textPos = assignTextPos(lrect,rrect);    else % whole screen        dsize = [0 0];    end    %%%    if ~isempty(cmIND) % cmIND for basic textures        % add frame and fixation to the background screen so only the image itself flickers        justFrameAndFix = AddFrameAndFix(ones(dsize)*bgInd,cmIND.FF_ind-1);        w.tex.justFrameAndFix = Screen('MakeTexture',w.w,ind2rgb(justFrameAndFix,cm));        % add frame w/o fixation for inter-trial interval        frameOnly = AddFrameAndFix(ones(dsize)*bgInd,cmIND.FF_ind-1,1); % last param is flag for no-fix        w.tex.frameOnly = Screen('MakeTexture',w.w,ind2rgb(frameOnly,cm));        % red frame and fixation for timeouts        redFrameAndFix = AddFrameAndFix(ones(dsize)*bgInd,cmIND.RED_ind);        w.tex.redFrameAndFix = Screen('MakeTexture',w.w,ind2rgb(redFrameAndFix,cm));    end        w.lrect = lrect;    w.rrect = rrect;    w.dsize = dsize;        % blank screen    w.tex.blank = Screen('MakeTexture',w.w,ind2rgb(ones(w.rect(4),w.rect(3))*bgInd,cm));    Screen('DrawTexture',w.w,w.tex.blank);    Screen('flip',w.w);end   function [dsize,cm,cmIND] = parse_varargin(varargin)    if length(varargin) > 0        dsize = varargin{1};    else        dsize = [];    end    if length(varargin) > 1        cm = varargin{2};    else        cm = zeros(256,3);    end    if length(varargin) > 2        cmIND = varargin{3};    else        cmIND = [];    end    returnend   function textPos = assignTextPos(lrect,rrect)	textPos(1).L.x=lrect(1)+5; % beneath frame, left justified	textPos(1).R.x=rrect(1)+5; 	textPos(1).L.y=lrect(4)+10; 	textPos(1).R.y=rrect(4)+10; 	textPos(1).size = 22;	textPos(2).L.x=lrect(1)+82; % in the middle of the frame 	textPos(2).R.x=rrect(1)+82; 	textPos(2).L.y=lrect(4)-81; 	textPos(2).R.y=rrect(4)-81; 	textPos(2).size = 18;    end 