function PutUpFrameAndFix%% Just put up the frame and fixation.%% constants and accumulators%	dsize = IMG_SIZE; % desired image size on screen in pixels (actual images should be of this size)	imgSize = dsize; % same thing	WHITE_ind=1;	BLACK_ind=256;	GRAY_ind=128;	BLUE = [0 0 1];	res.note='not available with PTB 2.54 for Windows';    res.Hz = 60; % assume 60 Hz		% color table indices	C1_ind = 2;	C2_ind = 3;	BLUE_ind = 4;	WHITE_ind = 1;	GRAY_ind = 128;	BLACK_ind = 256;	bgColor = BLUE_ind-1; % for initial background color%	rgbGamma = 1;% Now make the initial color map	anchor=1.0;	cm=repmat([0 0 0],256,1);	r=anchor; % initial value of r	beta = [1 1 1];	cm(BLUE_ind,:) = BLUE;	cm(BLACK_ind,:) = [0 0 0];	cm(WHITE_ind,:) = [1 1 1];	cm(GRAY_ind,:) = [0.5 0.5 0.5];	% now set colors C1 and C2	cm = updCM(cm,r,anchor,beta,C1_ind,C2_ind);	try% open main window & get needed constants    hideCursor;	[w.w,rect]=screen('OpenWindow',0,bgColor,[],8);% set the color map (this must be done AFTER screen('OpenWindow'))	screen(w.w,'SetClut',round(cm*255),0,8);% screen dimensions and stimulus placement	xmax=rect(3); ymax=rect(4);    [lctr,rctr]=IMG_POS(xmax,ymax);% get positions of l and r images	lrect=[lctr-round(dsize/2) lctr+round(dsize/2)];	rrect=[rctr-round(dsize/2) rctr+round(dsize/2)];% open off-screen windows for painting and clearing images	w.wimg = screen(w.w,'openoffscreenwindow',bgColor,rect); % paint images	w.wimgbg = screen(w.w,'openoffscreenwindow',bgColor,rect); % clear the screen (gray background)% add frame and fixation to the background screen so only the image itself flickers	JustFrameAndFix = AddFrameAndFix(ones(imgSize)*bgColor,BLACK_ind-1);	screen(w.wimgbg,'PutImage',JustFrameAndFix,lrect);	screen(w.wimgbg,'PutImage',JustFrameAndFix,rrect);% put the frames and fixation points on the screen	screen('CopyWindow',w.wimgbg,w.w);% wait for keypress to start	getChar_ignoreKeypad;	screen('CloseAll');    showCursor;	returncatch	screen('CloseAll');    showCursor;    error(lasterr)end%---------------------------------------------------------------%-----------------------------------------------------------------------------------function cm = updCM(cm,r,anchor,beta,C1_ind,C2_ind)	C1 = [anchor,r,0]; 	C2 = [r,anchor,0];	cm(C1_ind,:)=C1;	cm(C2_ind,:)=(C2 .* (beta));%-----------------------------------------------------------------------------------%---------------------------------------------------------------    