function checkerboard_test(greens,reds,rgbGamma,varargin)%%if ~(size(greens,1) == size(reds,1))    error('There must be an equal number of green and red hues.')endnHues = size(greens,1);nBit=8;KbName('UnifyKeyNames');keyNames = keyNamesOnThisComputer;    % Make two-color image    img1 = makeCheckerboard([50,50],[2,2],1); %ones(imgy,imgx);    img2 = 1-makeCheckerboard([50,50],[2,2],1); %zeros(imgy,imgx);;    img1 = floor(img1*255)+1;    img2 = floor(img2*255)+1;    img1 = AddFrameAndFix(img1,2);    img2 = AddFrameAndFix(img2,2);    dsize = size(img1);        % Make color maps    m = zeros(256,3);    m(1,:)=(greens(1,:));    m(2,:)=([0 0 0.8]);    m(256,:)=(reds(1,:));    rgbGamma = repmat(rgbGamma,256,1);    try    %HideCursor    ListenChar(2); % suppress output to command window    if length(varargin) == 0        w = initPsychToolboxWindows_noCLUT([],1);    else        w = varargin{1};    end    % since we are not using a CLUT, then we make many textures    for i = 1:nHues        cm = m;        cm(1,:) = greens(i,:);        cm(256,:) = reds(i,:);        cm = round(cm*255);        checkTex(1).tex(i) = Screen('MakeTexture',w.w,ind2rgb(img1,cm));        checkTex(2).tex(i) = Screen('MakeTexture',w.w,ind2rgb(img2,cm));    end    %% screen dimensions and stimulus placement	xmax=w.rect(3); ymax=w.rect(4);    [lctr,rctr]=IMG_POS(xmax,ymax);% get positions of l and r images	lrect=[lctr-round(dsize/2) lctr+round(dsize/2)];	rrect=[rctr-round(dsize/2) rctr+round(dsize/2)];% draw and flip without clearing    Screen('DrawTexture',w.w,checkTex(1).tex(1),[],lrect);    Screen('flip',w.w,0,1);    Screen('DrawTexture',w.w,checkTex(2).tex(1),[],rrect);    Screen('flip',w.w,0,1);    % wait for all keys to be released    keyIsDown=KbCheck(-1);    while keyIsDown        keyIsDown=KbCheck(-1);    end    t1=1; t2=2;    beta=1;    keepGoing = true;    while keepGoing        if keyIsDown            toDo = whatToDo(keyIsDown,keyCode);            if iscell(toDo)                toDo = toDo{1};            end            keyIsDown = 0; % added this line 07/26/2007 (AS)            lpt = 0;            switch toDo                case keyNames.space % = 'flip'                    t1 = (2-t1)+1;                    t2 = (2-t2)+1;                    Screen('DrawTexture',w.w,checkTex(t1).tex(beta),[],lrect);                    Screen('flip',w.w,0,1);                    Screen('DrawTexture',w.w,checkTex(t2).tex(beta),[],rrect);                    Screen('flip',w.w,0,1);                case keyNames.upArrow                    beta = min(beta+1,nHues);                    Screen('DrawTexture',w.w,checkTex(t1).tex(beta),[],lrect);                    Screen('flip',w.w,0,1);                    Screen('DrawTexture',w.w,checkTex(t2).tex(beta),[],rrect);                    Screen('flip',w.w,0,1);                case keyNames.dnArrow                    beta = max(beta-1,1);                    Screen('DrawTexture',w.w,checkTex(t1).tex(beta),[],lrect);                    Screen('flip',w.w,0,1);                    Screen('DrawTexture',w.w,checkTex(t2).tex(beta),[],rrect);                    Screen('flip',w.w,0,1);                case keyNames.p                    WaitSecs(0.5);                    KbWait;                case keyNames.escape                    Screen('CloseAll');                    ListenChar(1);                    return                otherwise				            end            WaitSecs(0.1);        end        [keyIsDown,secs,keyCode] = KbCheck(-1);    end    % put up blank background    Screen('DrawTexture',w.w,w.tex.blank);    Screen('flip',w.w);    if nargin < 4        Screen('CloseAll');    elseif isempty(varargin{1})        Screen('CloseAll');    else        % do nothing (i.e. do not close window)    end    if isnan(avgbeta) % i.e. if it was not set by a 'stay' command        avgbeta=mean(revList(4:nIters));    end    ShowCursor    ListenChar(1);catch ME    ShowCursor    Screen('closeall')    ListenChar(1);    rethrow(ME);end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function toDo = whatToDo(keyIsDown,keyCode)    toDo = KbName(keyCode);    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function [keyIsDown,secs,keyCode] = waitFlashing(w,tex1,tex2,keyIsDown,destRect)    if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end	WaitSecs(0.001);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end	WaitSecs(0.001);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end    Screen('DrawTexture',w.w,tex1,[],destRect);	Screen('flip',w.w,0,1);	Screen('flip',w.w,0,0);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end	WaitSecs(0.001);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end	WaitSecs(0.001);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end    Screen('DrawTexture',w.w,tex2,[],destRect);	Screen('flip',w.w,0,1);	Screen('flip',w.w,0,0);	if ~(keyIsDown)		[keyIsDown,secs,keyCode]=KbCheck(-1);	end