function img=AddFrameAndFix(img,cInd,varargin)%% function img=AddFrameAndFix(img,cInd,varargin)%% add frame and fixation to image% img = indexed color image% cInd = zero-based index into color map for color of frame and fixation% varargin = tack on a 1 if you don't want the fixation% % If img is n x m x 3 RGB image, then cInd should be an RGB triple% (added 4 Mar 2009, AS)%nd = ndims(img);imgSize=size(img);if nargin==2 % add add'l dummy argument to signal "no fixation"	% to make fixation	fixW = 1; % 1/2 width of the fixation mark	xctr=round(imgSize(2)/2);	yctr=round(imgSize(1)/2);    if nd == 3        for i=1:3        	img(xctr-fixW:xctr+fixW,yctr-fixW:yctr+fixW,i) = cInd(i);            img(xctr-fixW:xctr+fixW,yctr-fixW:yctr+fixW,i) = cInd(i);        end    else    	img(xctr-fixW:xctr+fixW,yctr-fixW:yctr+fixW) = cInd;        img(xctr-fixW:xctr+fixW,yctr-fixW:yctr+fixW) = cInd;    endend% add border% assuming image is squarebw=ceil(imgSize(1)/30); % border widthif nd == 3    for i=1:3        img(1:bw,:,i) = cInd(i);        img(imgSize(1)-bw:imgSize(1),:,i) = cInd(i);        img(:,1:bw,i) = cInd(i);        img(:,imgSize(2)-bw:imgSize(2),i) = cInd(i);    endelse    img(1:bw,:) = cInd;    img(imgSize(1)-bw:imgSize(1),:) = cInd;    img(:,1:bw,1) = cInd;    img(:,imgSize(2)-bw:imgSize(2),1) = cInd;endreturn%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%